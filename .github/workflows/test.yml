name: Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: public.ecr.aws/docker/library/postgres:16
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: development  # pragma: allowlist secret
          POSTGRES_DB: development
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Install poetry
      run: pipx install poetry

    - uses: actions/setup-python@v5
      id: setup-python
      with:
        python-version: "3.12"
        cache: 'poetry'

    - name: Install dependencies
      run: |
        cd wagtail_site
        poetry install --no-root
    - name: Run tests
      run: |
        cd wagtail_site
        poetry run python manage.py collectstatic --noinput
        poetry run pytest
        poetry run python manage.py check --deploy --settings wagtail_site.settings.production --fail-level INFO
      env:
        DJANGO_SECRET: some-long-value-used-only-in-CI-to-confirm-other-settings-are-valid  # pragma: allowlist secret
        DJANGO_SETTINGS_MODULE: wagtail_site.settings.dev
        ALLOWED_HOSTS: "example.internal"
        DB_HOST: localhost
        DB_PORT: "5432"
        DB_USER: postgres
        DB_PASS: development  # pragma: allowlist secret
        DB_NAME: development
        DB_SSL_MODE: allowed

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'
    - uses: pre-commit/action@v3.0.1
